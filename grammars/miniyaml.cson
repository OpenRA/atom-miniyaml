'scopeName': 'source.miniyaml'
'name': 'MiniYAML'
'fileTypes': [
  'yaml'
]
'patterns': [
  {
    'include': '#comment'
  }
  {
    # - hello:
    # look at me go:
    'begin': '(?>^(\\s*)(-)?\\s*)([^!{@#%&*>,\'"][^#]*?)(:)\\s+'
    'beginCaptures':
      '2':
        'name': 'punctuation.definition.entry.yaml'
      '3':
        'name': 'entity.name.tag.yaml'
      '4':
        'name': 'punctuation.separator.key-value.yaml'
    'end': '^((?!\\1\\s+)|(?=\\1\\s*(-|[^!@#%&*>,].*:\\s+|#)))'
    'patterns': [
      {
        'include': '#scalar-content'
      }
    ]
  }
  {
    'include': '#strings' # For list values that take up an entire line and are not proper nodes.
  }
]
'repository':
  'comment':
    'begin': '(?<=^|\\s)#(?!{)'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.comment.yaml'
    'end': '$'
    'name': 'comment.line.number-sign.yaml'
  'constants':
    'match': '(?<=\\s)(true|false|True|False|TRUE|FALSE|~)(?=\\s*$)'
    'name': 'constant.language.yaml'
  'numeric':
    # http://www.yaml.org/spec/1.2/spec.html#id2805071
    'patterns': [
      {
        'match': '[-+]?[0-9]+(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.integer.yaml'
      }
      {
        'match': '0o[0-7]+(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.octal.yaml'
      }
      {
        'match': '0x[0-9a-fA-F]+(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.hexadecimal.yaml'
      }
      {
        'match': '[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.float.yaml'
      }
      {
        'match': '[-+]?(\.inf|\.Inf|\.INF)(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.float.yaml'
      }
      {
        'match': '(\.nan|\.NaN|\.NAN)(?=\\s*($|#(?!#{)))'
        'name': 'constant.numeric.float.yaml'
      }
    ]
  'strings':
    'patterns': [
      {
        'match': '[^\\s"\'\\n](?!\\s*#(?!{))([^#\\n]|((?<!\\s)#))*'
        'name': 'string.unquoted.yaml'
      }
    ]
  'scalar-content':
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'match': '!(?=\\s)'
        'name': 'punctuation.definition.tag.non-specific.yaml'
      }
      {
        'include': '#constants'
      }
      {
        'include': '#numeric'
      }
      {
        'include': '#strings'
      }
    ]
